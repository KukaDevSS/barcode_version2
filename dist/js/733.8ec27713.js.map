{"version":3,"file":"js/733.8ec27713.js","mappings":"uLACSA,MAAM,a,0CAAXC,EAAAA,EAAAA,IAIM,MAJNC,E,gCAUF,GACEC,IAAAA,GACE,MAAO,CACLC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,KAAM,GACNC,MAAO,EACPC,kBAAmB,GACnBC,eAAgB,CACdC,OAAQ,UACRC,cAAc,EACdC,SAAU,GACVC,UAAW,UACXC,MAAO,EACPC,OAAQ,KAEVC,WAAW,EACXC,aAAc,GAElB,EAEAC,OAAAA,GACIC,QAAQC,IAAIC,KAAKC,OAAOC,QACxBF,KAAKlB,SAAWkB,KAAKC,OAAOC,OAAOC,QACnCH,KAAKhB,WAAagB,KAAKC,OAAOC,OAAOE,MAErCJ,KAAKK,mBACLL,KAAKM,eAET,EACAC,QAAS,CACPF,gBAAAA,GACEL,KAAKb,kBAAoB,GACzB,IAAK,IAAIqB,EAAI,EAAGA,EAAIR,KAAKd,MAAOsB,IAC9BR,KAAKb,kBAAkBsB,KAAKT,KAAKlB,SAGrC,EACAwB,aAAAA,GACE,MAAMI,EAAcC,OAAOC,KAAK,GAAI,UACpCF,EAAYG,SAASC,MAAM,gnEAoDfd,KAAKb,kBACN4B,KAAKZ,GAAYH,KAAKgB,oBAAoBb,KAC1Cc,KAAK,yFAMhBP,EAAYG,SAASK,QAGrBlB,KAAKmB,WAAU,KACb,MAAMC,EACJV,EAAYG,SAASQ,uBAAuB,eAC9CC,MAAMC,KAAKH,GAAaI,SAAQ,CAACC,EAAKC,KACpCC,IAAUF,EAAKzB,KAAKb,kBAAkBuC,GAAQ1B,KAAKZ,eAAe,IAGpEsB,EAAYkB,QAEZlB,EAAYQ,QAEZP,OAAOkB,SAASC,KAAO,UAAU,GAGrC,EAEAC,YAAAA,CAAaC,EAAMC,GACjB,OAAID,EAAKE,OAASD,EACXD,EAAKG,UAAU,EAAGF,EAAY,GAAI,QAEpCD,CACT,EACEhB,mBAAAA,GACE,MAAMoB,EAAY,QACZC,EAAW,QAGXrD,EAAagB,KAAKhB,WAClBsD,EAAsBtC,KAAK+B,cAAcQ,WAAWvD,GAAc,KAAMwD,QAAQ,GAAK,QAC3F,MAAO,6GAG6BF,6DACOF,aAAqBC,+DAIlE,I,QCjJN,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://barcode_v2/./src/views/BarcodePrice.vue","webpack://barcode_v2/./src/views/BarcodePrice.vue?7ddc"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <!-- <div class=\"w-full\">\r\n        <input type=\"text\" class=\"form-control mx-auto\">\r\n      </div> -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import JsBarcode from \"jsbarcode\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        itemCode: \"\",\r\n        userName: \"\",\r\n        headerText: '',\r\n        name: \"\",\r\n        count: 3,\r\n        generatedBarcodes: [],\r\n        barcodeOptions: {\r\n          format: \"CODE128\",\r\n          displayValue: true,\r\n          fontSize: 25,\r\n          lineColor: \"#000000\",\r\n          width: 2,\r\n          height: 100,\r\n        },\r\n        showAlert: false,\r\n        alertMessage: \"\",\r\n      };\r\n    },\r\n    \r\n    mounted() {\r\n        console.log(this.$route.params);\r\n        this.itemCode = this.$route.params.barcode;/* this use for production page table */\r\n        this.headerText = this.$route.params.price;\r\n\r\n        this.generateBarcodes();\r\n        this.printBarcodes();\r\n        \r\n    },\r\n    methods: {\r\n      generateBarcodes() {\r\n        this.generatedBarcodes = [];\r\n        for (let i = 0; i < this.count; i++) {\r\n          this.generatedBarcodes.push(this.itemCode);\r\n        }\r\n        // alert(`${this.count} barcodes generated for item code: ${this.itemCode}`);\r\n      },\r\n      printBarcodes() {\r\n        const printWindow = window.open(\"\", \"_blank\");\r\n        printWindow.document.write(`\r\n            <html>\r\n              <head>\r\n                <title>Generated Barcodes</title>\r\n                <style>\r\n                  @import url('https://fonts.googleapis.com/css2?family=Bangers&family=Lobster&family=Noto+Sans+Lao&family=Noto+Serif+Lao:wght@900&family=Oswald:wght@700&family=Tapestry&display=swap');\r\n                  @page {\r\n                    size: 3.2cm 2cm; /* Set the size of the printed page */\r\n                    margin: 0;\r\n                  }\r\n                  .barcode-container {\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    // align-items: center;\r\n                    height: 100%;\r\n                    width: 100%;\r\n                  }\r\n                  .barcode-svg {\r\n                    /* Adjusted to 2 cm height and 3 cm width */\r\n                    height: 1.6cm;\r\n                    width: 3.4cm;\r\n                    font-size: 12px;\r\n                    margin-top: -4px;\r\n                  }\r\n                  .barcode-text {\r\n                    font-size: 30px; /* Adjust the font size as needed */\r\n                    font-family: Arial, sans-serif; /* Use a commonly available font */\r\n                    margin-top: 5px; /* Add a small margin between barcode and text */\r\n                    text-align: center;\r\n                  }\r\n                  .container{\r\n                    display: flex;\r\n                    justify-content: justify-content-center;\r\n                    width: 100%;\r\n                    margin-left: auto;\r\n                    margin-left: auto;\r\n                  }\r\n                  .barcode-header{\r\n                    width: 120px;\r\n                    font-size: 10px;\r\n                    text-align: center;\r\n                    margin-top: -10px;\r\n                    font-family: 'Noto Sans Lao', sans-serif;\r\n                }\r\n                .barcode-row {\r\n                  display: flex;\r\n                  justify-content: space-between;\r\n              }\r\n                </style>\r\n              </head>\r\n              <body>\r\n                <div class=\"barcode-row\">\r\n                  ${this.generatedBarcodes\r\n                  .map((barcode) => this.generateBarcodeHtml(barcode))\r\n                  .join(\"\")}  \r\n                </div>\r\n              </body>\r\n            </html>\r\n          `);\r\n  \r\n        printWindow.document.close();\r\n  \r\n        // Delay printing until the barcodes are fully rendered\r\n        this.$nextTick(() => {\r\n          const svgElements =\r\n            printWindow.document.getElementsByClassName(\"barcode-svg\");\r\n          Array.from(svgElements).forEach((svg, index) => {\r\n            JsBarcode(svg, this.generatedBarcodes[index], this.barcodeOptions);\r\n          });\r\n          // Use window.print() to print directly to the printer\r\n          printWindow.print();\r\n          // After printing, close the print window and navigate to the home page\r\n          printWindow.close();\r\n          // Navigate to the home page\r\n          window.location.href = '/product'; \r\n          // this.$router.push({ name: 'product' });\r\n        });\r\n      },\r\n       // Truncate a string and add an ellipsis\r\n      truncateText(text, maxLength) {\r\n        if (text.length > maxLength) {\r\n        return text.substring(0, maxLength - 3)+ \" ກີບ \";\r\n      }\r\n      return text;\r\n    },\r\n      generateBarcodeHtml() {\r\n        const svgHeight = \"1.6cm\"; // Set your desired height (e.g., \"3cm\")\r\n        const svgWidth = \"3.4cm\";  // Set your desired width (e.g., \"5cm\")\r\n\r\n      // Modify this section to include your header text\r\n        const headerText = this.headerText;\r\n        const truncatedHeaderText = this.truncateText((parseFloat(headerText) / 1000).toFixed(3) + \" ກີບ\"); // Truncate to 20 characters // Set your desired header text\r\n        return `\r\n          <div class=\"barcode-container\">\r\n            <div>\r\n              <div class=\"barcode-header\">${truncatedHeaderText}</div>\r\n                <svg class=\"barcode-svg\" height=\"${svgHeight}\" width=\"${svgWidth}\"></svg>  \r\n            </div>\r\n          </div>\r\n          `;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .container {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n  }\r\n  </style>\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  ","import { render } from \"./BarcodePrice.vue?vue&type=template&id=00d74840\"\nimport script from \"./BarcodePrice.vue?vue&type=script&lang=js\"\nexport * from \"./BarcodePrice.vue?vue&type=script&lang=js\"\n\nimport \"./BarcodePrice.vue?vue&type=style&index=0&id=00d74840&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","data","itemCode","userName","headerText","name","count","generatedBarcodes","barcodeOptions","format","displayValue","fontSize","lineColor","width","height","showAlert","alertMessage","mounted","console","log","this","$route","params","barcode","price","generateBarcodes","printBarcodes","methods","i","push","printWindow","window","open","document","write","map","generateBarcodeHtml","join","close","$nextTick","svgElements","getElementsByClassName","Array","from","forEach","svg","index","JsBarcode","print","location","href","truncateText","text","maxLength","length","substring","svgHeight","svgWidth","truncatedHeaderText","parseFloat","toFixed","__exports__","render"],"sourceRoot":""}