"use strict";(self["webpackChunkbarcode_v2"]=self["webpackChunkbarcode_v2"]||[]).push([[733],{4733:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var a=n(3396);const o={class:"container"};function r(e,t,n,r,s,i){return(0,a.wg)(),(0,a.iD)("div",o)}n(7658);var s=n(8504),i=n.n(s),d={data(){return{itemCode:"",userName:"",headerText:"",name:"",count:3,generatedBarcodes:[],barcodeOptions:{format:"CODE128",displayValue:!0,fontSize:25,lineColor:"#000000",width:2,height:100},showAlert:!1,alertMessage:""}},mounted(){console.log(this.$route.params),this.itemCode=this.$route.params.barcode,this.headerText=this.$route.params.price,this.generateBarcodes(),this.printBarcodes()},methods:{generateBarcodes(){this.generatedBarcodes=[];for(let e=0;e<this.count;e++)this.generatedBarcodes.push(this.itemCode)},printBarcodes(){const e=window.open("","_blank");e.document.write(`\n            <html>\n              <head>\n                <title>Generated Barcodes</title>\n                <style>\n                  @import url('https://fonts.googleapis.com/css2?family=Bangers&family=Lobster&family=Noto+Sans+Lao&family=Noto+Serif+Lao:wght@900&family=Oswald:wght@700&family=Tapestry&display=swap');\n                  @page {\n                    size: 3.2cm 2cm; /* Set the size of the printed page */\n                    margin: 0;\n                  }\n                  .barcode-container {\n                    display: flex;\n                    justify-content: center;\n                    // align-items: center;\n                    height: 100%;\n                    width: 100%;\n                  }\n                  .barcode-svg {\n                    /* Adjusted to 2 cm height and 3 cm width */\n                    height: 1.6cm;\n                    width: 3.4cm;\n                    font-size: 12px;\n                    margin-top: -4px;\n                  }\n                  .barcode-text {\n                    font-size: 30px; /* Adjust the font size as needed */\n                    font-family: Arial, sans-serif; /* Use a commonly available font */\n                    margin-top: 5px; /* Add a small margin between barcode and text */\n                    text-align: center;\n                  }\n                  .container{\n                    display: flex;\n                    justify-content: justify-content-center;\n                    width: 100%;\n                    margin-left: auto;\n                    margin-left: auto;\n                  }\n                  .barcode-header{\n                    width: 120px;\n                    font-size: 10px;\n                    text-align: center;\n                    margin-top: -10px;\n                    font-family: 'Noto Sans Lao', sans-serif;\n                }\n                .barcode-row {\n                  display: flex;\n                  justify-content: space-between;\n              }\n                </style>\n              </head>\n              <body>\n                <div class="barcode-row">\n                  ${this.generatedBarcodes.map((e=>this.generateBarcodeHtml(e))).join("")}  \n                </div>\n              </body>\n            </html>\n          `),e.document.close(),this.$nextTick((()=>{const t=e.document.getElementsByClassName("barcode-svg");Array.from(t).forEach(((e,t)=>{i()(e,this.generatedBarcodes[t],this.barcodeOptions)})),e.print(),e.close(),window.location.href="/product"}))},truncateText(e,t){return e.length>t?e.substring(0,t-3)+" ກີບ ":e},generateBarcodeHtml(){const e="1.6cm",t="3.4cm",n=this.headerText,a=this.truncateText((parseFloat(n)/1e3).toFixed(3)+" ກີບ");return`\n          <div class="barcode-container">\n            <div>\n              <div class="barcode-header">${a}</div>\n                <svg class="barcode-svg" height="${e}" width="${t}"></svg>  \n            </div>\n          </div>\n          `}}},c=n(89);const l=(0,c.Z)(d,[["render",r]]);var h=l}}]);
//# sourceMappingURL=733.8ec27713.js.map