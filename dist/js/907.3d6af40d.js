"use strict";(self["webpackChunkbarcode_v2"]=self["webpackChunkbarcode_v2"]||[]).push([[907],{5907:function(e,t,n){n.r(t),n.d(t,{default:function(){return l}});var a=n(3396);const r={class:"container"};function o(e,t,n,o,s,i){return(0,a.wg)(),(0,a.iD)("div",r)}n(7658);var s=n(8504),i=n.n(s),d={data(){return{itemCode:"",userName:"",headerText:"",name:"",count:3,generatedBarcodes:[],barcodeOptions:{format:"CODE128",displayValue:!0,fontSize:30,lineColor:"#000000",width:2.4,height:100},showAlert:!1,alertMessage:""}},mounted(){console.log(this.$route.params),this.itemCode=this.$route.params.barcode,this.headerText=this.$route.params.laoname,this.generateBarcodes(),this.printBarcodes()},methods:{generateBarcodes(){if(this.generatedBarcodes=[],this.itemCode)for(let e=0;e<this.count;e++)this.generatedBarcodes.push(this.itemCode)},printBarcodes(){const e=window.open("","_blank");e.document.write(`\n            <html>\n              <head>\n                <title>Generated Barcodes</title>\n                <style>\n                  @import url('https://fonts.googleapis.com/css2?family=Bangers&family=Lobster&family=Noto+Sans+Lao&family=Noto+Serif+Lao:wght@900&family=Oswald:wght@700&family=Tapestry&display=swap');\n                  @page {\n                    size: 3.5cm 2cm; /* Set the size of the printed page */\n                    margin: 0;\n                  }\n                  .barcode-container {\n                    display: flex;\n                    justify-content: center;\n                    // align-items: center;\n                    // height: 100%;\n                    // width: 100%;\n                  }\n                  .barcode-svg {\n                    /* Adjusted to 2 cm height and 3 cm width */\n                    height: 1.4cm;\n                    width: 3cm;\n                    margin-top: -2px;\n                    margin-left: 3px;\n                    margin-right: 10px;\n                  }                \n                  .barcode-header{\n                    width: 120px;\n                    font-size: 8px;\n                    text-align: center;\n                    margin-top: -10px;\n                    font-family: 'Noto Sans Lao', sans-serif;\n                }\n                .barcode-row {\n                  display: flex;\n                  justify-content: center;\n                }\n                </style>\n              </head>\n              <body>\n                <div class="barcode-row">\n                  ${this.generatedBarcodes.map((e=>this.generateBarcodeHtml(e))).join("")}  \n                </div>\n              </body>\n            </html>\n          `),e.document.close(),this.$nextTick((()=>{const t=e.document.getElementsByClassName("barcode-svg");Array.from(t).forEach(((e,t)=>{i()(e,this.generatedBarcodes[t],this.barcodeOptions)})),e.print(),e.close(),window.location.href="/product"}))},truncateText(e,t){return e.length>t?e.substring(0,t-3)+"...":e},generateBarcodeHtml(){const e="3cm",t="100%",n=this.headerText,a=this.truncateText(n,30);return`\n          <div class="barcode-container">\n            <div>\n              <div class="barcode-header">${a}</div>\n                <svg class="barcode-svg" height="${e}" width="${t}"></svg>  \n            </div>\n          </div>\n          `}}},c=n(89);const h=(0,c.Z)(d,[["render",o]]);var l=h}}]);
//# sourceMappingURL=907.3d6af40d.js.map